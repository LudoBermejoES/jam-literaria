// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String    @id @default(uuid())
  username  String
  createdAt DateTime  @default(now())
  sessions  Session[] @relation("UserSessions")
  ideas     Idea[]
  votes     Vote[]
}

model Session {
  id        String   @id @default(uuid())
  code      String   @unique
  createdAt DateTime @default(now())
  status    String   @default("WAITING") // WAITING, IDEAS, VOTING, FINISHED
  users     User[]   @relation("UserSessions")
  ideas     Idea[]
  votes     Vote[]
  ownerId   String
}

model Idea {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
  votes     Vote[]
}

model Vote {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
  idea      Idea     @relation(fields: [ideaId], references: [id])
  ideaId    String

  @@unique([userId, ideaId])
}
