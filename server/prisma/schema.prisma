// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           String     @id @default(uuid())
  name         String
  sessions     Session[]  @relation("SessionParticipants")
  ownedSessions Session[] @relation("SessionOwner")
  ideas        Idea[]
  votes        Vote[]
  createdAt    DateTime   @default(now())
  lastActive   DateTime   @default(now())  // Para gestionar reconexiones
}

model Session {
  id           String     @id @default(uuid())
  code         String     @unique // Código único para unirse (autor o libro famoso)
  status       String     @default("WAITING") // WAITING, COLLECTING_IDEAS, VOTING, REVOTING, FINISHED
  currentRound Int        @default(0)
  owner        User       @relation("SessionOwner", fields: [ownerId], references: [id])
  ownerId      String
  participants User[]     @relation("SessionParticipants")
  ideas        Idea[]
  votes        Vote[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Idea {
  id        String   @id @default(uuid())
  content   String   // Sin límite de longitud
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
  votes     Vote[]
  createdAt DateTime @default(now())
}

model Vote {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  idea      Idea     @relation(fields: [ideaId], references: [id])
  ideaId    String
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
  round     Int      // Para identificar la ronda de votación
  createdAt DateTime @default(now())

  @@unique([userId, ideaId, round, sessionId])
}
